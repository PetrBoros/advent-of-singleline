import re
from functools import reduce

# Part 1
print(sum(map(sum, reduce(lambda a,b: (lambda p, x, y: [[p[i][j] if (i >= y or j >= x) else 1 for j in range(len(p[i]))] for i in range(len(p))])(a, b[1], b[2]) if b[0] == 0 else ((lambda p, x, y: [p[i] if i != x else (lambda s, n: s[-n%len(s):] + s[:-n%len(s)])(p[i], y) for i in range(len(p))])(a, b[1], b[2]) if b[0] == 1 else (lambda p, x, y: list(map(list, zip(*(lambda q: [q[i] if i != x else (lambda s, n: s[-n%len(s):] + s[:-n%len(s)])(q[i], y) for i in range(len(q))])(list(map(list, zip(*p))))))))(a, b[1], b[2])), map(lambda t: (t[0], *map(int, t[1].groups())), map(lambda row: (0, re.search(r'rect ([0-9]*)x([0-9]*)', row)) if 'rect' in row else ((1,re.search(r'rotate row y=([0-9]*) by ([0-9]*)', row)) if 'row' in row else ((2,re.search(r'rotate column x=([0-9]*) by ([0-9]*)', row)))), [row for row in open('input.txt').read().splitlines()])), [[0]*50 for _ in range(6)]))))

# Part 2
print('\n'.join([''.join(list(map(lambda x: 'â–ˆ' if x else ' ',row))) for row in reduce(lambda a,b: (lambda p, x, y: [[p[i][j] if (i >= y or j >= x) else 1 for j in range(len(p[i]))] for i in range(len(p))])(a, b[1], b[2]) if b[0] == 0 else ((lambda p, x, y: [p[i] if i != x else (lambda s, n: s[-n%len(s):] + s[:-n%len(s)])(p[i], y) for i in range(len(p))])(a, b[1], b[2]) if b[0] == 1 else (lambda p, x, y: list(map(list, zip(*(lambda q: [q[i] if i != x else (lambda s, n: s[-n%len(s):] + s[:-n%len(s)])(q[i], y) for i in range(len(q))])(list(map(list, zip(*p))))))))(a, b[1], b[2])), map(lambda t: (t[0], *map(int, t[1].groups())), map(lambda row: (0, re.search(r'rect ([0-9]*)x([0-9]*)', row)) if 'rect' in row else ((1,re.search(r'rotate row y=([0-9]*) by ([0-9]*)', row)) if 'row' in row else ((2,re.search(r'rotate column x=([0-9]*) by ([0-9]*)', row)))), [row for row in open('input.txt').read().splitlines()])), [[0]*50 for _ in range(6)])]))
